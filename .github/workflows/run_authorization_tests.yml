name: Authorization Automatad tests

on: 
  push:
    branches:
      - develop
  schedule:
    - cron: "*/10 * * * *"

jobs:
  test:
    runs-on: ubuntu-latest

    steps: 
        - name: Checkout repository
          uses: actions/checkout@v4
        - name: setup Python
          uses: actions/setup-python@v5
          with: 
            python-version: "3.11"
        - name: Install Chrome
          run: sudo apt-get install google-chrome-stable
        - name: install dependencies
          run: pip install -r requirements.txt
        - name: Run test_header
          run: pytest authorization/tests/test_header.py
        - name: Run test_signin
          run: pytest authorization/tests/test_signin.py
        - name: Run test_signin_password
          run: pytest authorization/tests/test_signin_password.py
        - name: Run test_reset_password
          run: pytest authorization/tests/test_reset_password.py
        - name: Run test_signup
          run: pytest authorization/tests/test_signup.py
        - name: Run test_verification_code
          run: pytest authorization/tests/test_verification_code.py



# name: Authorization Automatad tests

# on: 
#   workflow_dispatch:
#     inputs:
#       deployment_target: 
#         description: Choose target
#         required: true
#         default: test_header  # значение по умолчанию
#         type: choice 
#         options:
#           - test_header
#           - test_reset_password

# jobs:
#   test:
#     runs-on: ubuntu-latest

#     steps: 
#       - name: Checkout repository
#         uses: actions/checkout@v4
#       - name: setup Python
#         uses: actions/setup-python@v5
#         with: 
#           python-version: "3.11"
#       - name: Install Chrome
#         run: sudo apt-get install google-chrome-stable
#       - name: install dependencies
#         run: pip install -r requirements.txt
#       - name: test_header
#         if: "github.event.inputs.deployment_target == 'test_header'"
#         run: pytest authorization/tests/test_header.py
#       - name: test_reset_password
#         if: "github.event.inputs.deployment_target == 'test_reset_password'"
#         run: pytest authorization/tests/test_reset_password.py
