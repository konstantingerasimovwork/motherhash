{"uid":"99a251dd069d922b","name":"test_check_email_text_on_verification_code_page[pt]","fullName":"authorization.tests.test_verification_code.TestVerificationCodePassword#test_check_email_text_on_verification_code_page","historyId":"f3dfb48eb1abec4f2cf4a8fb84866452","time":{"start":1724590738583,"stop":1724590738583,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x563d281d96ca <unknown>\n#1 0x563d27eaa600 <unknown>\n#2 0x563d27ee2485 <unknown>\n#3 0x563d27ede2f8 <unknown>\n#4 0x563d27f28ce8 <unknown>\n#5 0x563d27f1c643 <unknown>\n#6 0x563d27eecd31 <unknown>\n#7 0x563d27eed79e <unknown>\n#8 0x563d281a125b <unknown>\n#9 0x563d281a51f2 <unknown>\n#10 0x563d2818e615 <unknown>\n#11 0x563d281a5d82 <unknown>\n#12 0x563d2817325f <unknown>\n#13 0x563d281c8e68 <unknown>\n#14 0x563d281c9040 <unknown>\n#15 0x563d281d849c <unknown>\n#16 0x7f621c494ac3 <unknown>","statusTrace":"@pytest.fixture(scope=\"function\")\n    @allure.title('Инициализация драйвера Chrome')\n    def browser():\n        options = Options()\n        # options.add_argument(\"--headless\")\n        options.add_argument('--window-size=1920,1080')\n>       browser = webdriver.Chrome(options=options)\n\nconftest.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py:66: in __init__\n    super().__init__(command_executor=executor, options=options)\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:212: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:299: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fcaed7190d0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: Chrome failed to sta...\\\\n#14 0x563d281c9040 \\\\u003Cunknown>\\\\n#15 0x563d281d849c \\\\u003Cunknown>\\\\n#16 0x7f621c494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\nE         (session not created: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nE       Stacktrace:\nE       #0 0x563d281d96ca <unknown>\nE       #1 0x563d27eaa600 <unknown>\nE       #2 0x563d27ee2485 <unknown>\nE       #3 0x563d27ede2f8 <unknown>\nE       #4 0x563d27f28ce8 <unknown>\nE       #5 0x563d27f1c643 <unknown>\nE       #6 0x563d27eecd31 <unknown>\nE       #7 0x563d27eed79e <unknown>\nE       #8 0x563d281a125b <unknown>\nE       #9 0x563d281a51f2 <unknown>\nE       #10 0x563d2818e615 <unknown>\nE       #11 0x563d281a5d82 <unknown>\nE       #12 0x563d2817325f <unknown>\nE       #13 0x563d281c8e68 <unknown>\nE       #14 0x563d281c9040 <unknown>\nE       #15 0x563d281d849c <unknown>\nE       #16 0x7f621c494ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: SessionNotCreatedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1724590737419,"stop":1724590737453,"duration":34},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Инициализация драйвера Chrome","time":{"start":1724590738584,"stop":1724590738770,"duration":186},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x563d281d96ca <unknown>\n#1 0x563d27eaa600 <unknown>\n#2 0x563d27ee2485 <unknown>\n#3 0x563d27ede2f8 <unknown>\n#4 0x563d27f28ce8 <unknown>\n#5 0x563d27f1c643 <unknown>\n#6 0x563d27eecd31 <unknown>\n#7 0x563d27eed79e <unknown>\n#8 0x563d281a125b <unknown>\n#9 0x563d281a51f2 <unknown>\n#10 0x563d2818e615 <unknown>\n#11 0x563d281a5d82 <unknown>\n#12 0x563d2817325f <unknown>\n#13 0x563d281c8e68 <unknown>\n#14 0x563d281c9040 <unknown>\n#15 0x563d281d849c <unknown>\n#16 0x7f621c494ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1123, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 895, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/motherhash/motherhash/conftest.py\", line 41, in browser\n    browser = webdriver.Chrome(options=options)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py\", line 45, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py\", line 66, in __init__\n    super().__init__(command_executor=executor, options=options)\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 212, in __init__\n    self.start_session(capabilities)\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 299, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"suite","value":"Verification Code"},{"name":"subSuite","value":"2. Проверка наличия email, введённого ранее на странице входа"},{"name":"parentSuite","value":"authorization.tests"},{"name":"host","value":"fv-az1247-936"},{"name":"thread","value":"11832-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"authorization.tests.test_verification_code"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"language","value":"'pt'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":8,"unknown":0,"total":10},"items":[{"uid":"e2578faf02b0cdef","reportUrl":"https://konstantingerasimovwork.github.io/motherhash/106//#testresult/e2578faf02b0cdef","status":"passed","time":{"start":1724505022016,"stop":1724505024066,"duration":2050}},{"uid":"772b05731cc5ca8c","reportUrl":"https://konstantingerasimovwork.github.io/motherhash/105//#testresult/772b05731cc5ca8c","status":"passed","time":{"start":1724486731799,"stop":1724486733316,"duration":1517}},{"uid":"2f4c98e72afbc874","reportUrl":"https://konstantingerasimovwork.github.io/motherhash/104//#testresult/2f4c98e72afbc874","status":"broken","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x564eab07d6ca <unknown>\n#1 0x564eaad4e600 <unknown>\n#2 0x564eaad86485 <unknown>\n#3 0x564eaad822f8 <unknown>\n#4 0x564eaadccce8 <unknown>\n#5 0x564eaadc0643 <unknown>\n#6 0x564eaad90d31 <unknown>\n#7 0x564eaad9179e <unknown>\n#8 0x564eab04525b <unknown>\n#9 0x564eab0491f2 <unknown>\n#10 0x564eab032615 <unknown>\n#11 0x564eab049d82 <unknown>\n#12 0x564eab01725f <unknown>\n#13 0x564eab06ce68 <unknown>\n#14 0x564eab06d040 <unknown>\n#15 0x564eab07c49c <unknown>\n#16 0x7fecb0494ac3 <unknown>","time":{"start":1724485952556,"stop":1724485952556,"duration":0}},{"uid":"ec6160a9f8d938a5","reportUrl":"https://konstantingerasimovwork.github.io/motherhash/103//#testresult/ec6160a9f8d938a5","status":"passed","time":{"start":1724426045651,"stop":1724426047695,"duration":2044}},{"uid":"75c3a66a9d7fdaf6","reportUrl":"https://konstantingerasimovwork.github.io/motherhash/102//#testresult/75c3a66a9d7fdaf6","status":"passed","time":{"start":1724423738653,"stop":1724423740700,"duration":2047}},{"uid":"477b6014b6637fb4","reportUrl":"https://konstantingerasimovwork.github.io/motherhash/101//#testresult/477b6014b6637fb4","status":"passed","time":{"start":1724418697822,"stop":1724418699880,"duration":2058}},{"uid":"208fb0520a040e9a","reportUrl":"https://konstantingerasimovwork.github.io/motherhash/100//#testresult/208fb0520a040e9a","status":"passed","time":{"start":1724407234549,"stop":1724407236580,"duration":2031}},{"uid":"91b6a0f4e3c5fbd7","reportUrl":"https://konstantingerasimovwork.github.io/motherhash/99//#testresult/91b6a0f4e3c5fbd7","status":"passed","time":{"start":1724405024059,"stop":1724405026109,"duration":2050}},{"uid":"9496397248bed790","reportUrl":"https://konstantingerasimovwork.github.io/motherhash/98//#testresult/9496397248bed790","status":"passed","time":{"start":1724402782999,"stop":1724402785055,"duration":2056}}]},"tags":[]},"source":"99a251dd069d922b.json","parameterValues":["'pt'"]}