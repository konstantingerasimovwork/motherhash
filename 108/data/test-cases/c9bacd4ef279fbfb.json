{"uid":"c9bacd4ef279fbfb","name":"test_header_advantages[language_locator1-advantages_link1-https://motherhash-dev.nhco.tech/ru#advantages-\\u041f\\u0440\\u0435\\u0438\\u043c\\u0443\\u0449\\u0435\\u0441\\u0442\\u0432\\u0430-RU]","fullName":"authorization.tests.test_header.TestHeader#test_header_advantages","historyId":"e367a2f9f66c1adbffa247d8ddcc0650","time":{"start":1724590695430,"stop":1724590695430,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55b094bce6ca <unknown>\n#1 0x55b09489f600 <unknown>\n#2 0x55b0948d7485 <unknown>\n#3 0x55b0948d32f8 <unknown>\n#4 0x55b09491dce8 <unknown>\n#5 0x55b094911643 <unknown>\n#6 0x55b0948e1d31 <unknown>\n#7 0x55b0948e279e <unknown>\n#8 0x55b094b9625b <unknown>\n#9 0x55b094b9a1f2 <unknown>\n#10 0x55b094b83615 <unknown>\n#11 0x55b094b9ad82 <unknown>\n#12 0x55b094b6825f <unknown>\n#13 0x55b094bbde68 <unknown>\n#14 0x55b094bbe040 <unknown>\n#15 0x55b094bcd49c <unknown>\n#16 0x7f6c2ba94ac3 <unknown>","statusTrace":"@pytest.fixture(scope=\"function\")\n    @allure.title('Инициализация драйвера Chrome')\n    def browser():\n        options = Options()\n        # options.add_argument(\"--headless\")\n        options.add_argument('--window-size=1920,1080')\n>       browser = webdriver.Chrome(options=options)\n\nconftest.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py:66: in __init__\n    super().__init__(command_executor=executor, options=options)\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:212: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:299: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f42ff7bb950>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: Chrome failed to sta...\\\\n#14 0x55b094bbe040 \\\\u003Cunknown>\\\\n#15 0x55b094bcd49c \\\\u003Cunknown>\\\\n#16 0x7f6c2ba94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\nE         (session not created: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nE       Stacktrace:\nE       #0 0x55b094bce6ca <unknown>\nE       #1 0x55b09489f600 <unknown>\nE       #2 0x55b0948d7485 <unknown>\nE       #3 0x55b0948d32f8 <unknown>\nE       #4 0x55b09491dce8 <unknown>\nE       #5 0x55b094911643 <unknown>\nE       #6 0x55b0948e1d31 <unknown>\nE       #7 0x55b0948e279e <unknown>\nE       #8 0x55b094b9625b <unknown>\nE       #9 0x55b094b9a1f2 <unknown>\nE       #10 0x55b094b83615 <unknown>\nE       #11 0x55b094b9ad82 <unknown>\nE       #12 0x55b094b6825f <unknown>\nE       #13 0x55b094bbde68 <unknown>\nE       #14 0x55b094bbe040 <unknown>\nE       #15 0x55b094bcd49c <unknown>\nE       #16 0x7f6c2ba94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: SessionNotCreatedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1724590692067,"stop":1724590692130,"duration":63},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Инициализация драйвера Chrome","time":{"start":1724590695430,"stop":1724590695613,"duration":183},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55b094bce6ca <unknown>\n#1 0x55b09489f600 <unknown>\n#2 0x55b0948d7485 <unknown>\n#3 0x55b0948d32f8 <unknown>\n#4 0x55b09491dce8 <unknown>\n#5 0x55b094911643 <unknown>\n#6 0x55b0948e1d31 <unknown>\n#7 0x55b0948e279e <unknown>\n#8 0x55b094b9625b <unknown>\n#9 0x55b094b9a1f2 <unknown>\n#10 0x55b094b83615 <unknown>\n#11 0x55b094b9ad82 <unknown>\n#12 0x55b094b6825f <unknown>\n#13 0x55b094bbde68 <unknown>\n#14 0x55b094bbe040 <unknown>\n#15 0x55b094bcd49c <unknown>\n#16 0x7f6c2ba94ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1123, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 895, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/motherhash/motherhash/conftest.py\", line 41, in browser\n    browser = webdriver.Chrome(options=options)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py\", line 45, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py\", line 66, in __init__\n    super().__init__(command_executor=executor, options=options)\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 212, in __init__\n    self.start_session(capabilities)\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 299, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"subSuite","value":"3. Проверка перехода по пункту меню “Advantages/Преимущества/Vantagens“ на раздел Advantages/Преимущества/Vantagens на главной странице лендинга"},{"name":"suite","value":"Header"},{"name":"parentSuite","value":"authorization.tests"},{"name":"host","value":"fv-az1247-936"},{"name":"thread","value":"2099-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"authorization.tests.test_header"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"advantages_link","value":"('xpath', './/a[contains(text(), \"Преимущества\")]')"},{"name":"advantages_url","value":"'https://motherhash-dev.nhco.tech/ru#advantages'"},{"name":"language","value":"'RU'"},{"name":"language_locator","value":"('xpath', './/ul/li[3]/div')"},{"name":"text","value":"'Преимущества'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":8,"unknown":0,"total":10},"items":[{"uid":"e7ceb1f07cb52e90","reportUrl":"https://konstantingerasimovwork.github.io/motherhash/106//#testresult/e7ceb1f07cb52e90","status":"passed","time":{"start":1724504337662,"stop":1724504342350,"duration":4688}},{"uid":"13bdc27c4aa6ae66","reportUrl":"https://konstantingerasimovwork.github.io/motherhash/105//#testresult/13bdc27c4aa6ae66","status":"passed","time":{"start":1724486090606,"stop":1724486094519,"duration":3913}},{"uid":"59da22dea7eb4e40","reportUrl":"https://konstantingerasimovwork.github.io/motherhash/104//#testresult/59da22dea7eb4e40","status":"broken","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x5590381876ca <unknown>\n#1 0x559037e58600 <unknown>\n#2 0x559037e90485 <unknown>\n#3 0x559037e8c2f8 <unknown>\n#4 0x559037ed6ce8 <unknown>\n#5 0x559037eca643 <unknown>\n#6 0x559037e9ad31 <unknown>\n#7 0x559037e9b79e <unknown>\n#8 0x55903814f25b <unknown>\n#9 0x5590381531f2 <unknown>\n#10 0x55903813c615 <unknown>\n#11 0x559038153d82 <unknown>\n#12 0x55903812125f <unknown>\n#13 0x559038176e68 <unknown>\n#14 0x559038177040 <unknown>\n#15 0x55903818649c <unknown>\n#16 0x7fdf32c94ac3 <unknown>","time":{"start":1724485910124,"stop":1724485910124,"duration":0}},{"uid":"37b22c7060c61ecf","reportUrl":"https://konstantingerasimovwork.github.io/motherhash/103//#testresult/37b22c7060c61ecf","status":"passed","time":{"start":1724425352095,"stop":1724425356448,"duration":4353}},{"uid":"d0a98e9bfe6c3ad2","reportUrl":"https://konstantingerasimovwork.github.io/motherhash/102//#testresult/d0a98e9bfe6c3ad2","status":"passed","time":{"start":1724423041930,"stop":1724423046643,"duration":4713}},{"uid":"dfaae671a29a53d1","reportUrl":"https://konstantingerasimovwork.github.io/motherhash/101//#testresult/dfaae671a29a53d1","status":"passed","time":{"start":1724418008990,"stop":1724418014085,"duration":5095}},{"uid":"c0ee9f9ab5de77f1","reportUrl":"https://konstantingerasimovwork.github.io/motherhash/100//#testresult/c0ee9f9ab5de77f1","status":"passed","time":{"start":1724406549459,"stop":1724406554212,"duration":4753}},{"uid":"a0debd9966e8bb8c","reportUrl":"https://konstantingerasimovwork.github.io/motherhash/99//#testresult/a0debd9966e8bb8c","status":"passed","time":{"start":1724404316865,"stop":1724404320742,"duration":3877}},{"uid":"5e3cfb6624d93da0","reportUrl":"https://konstantingerasimovwork.github.io/motherhash/98//#testresult/5e3cfb6624d93da0","status":"passed","time":{"start":1724402060724,"stop":1724402064563,"duration":3839}}]},"tags":[]},"source":"c9bacd4ef279fbfb.json","parameterValues":["('xpath', './/a[contains(text(), \"Преимущества\")]')","'https://motherhash-dev.nhco.tech/ru#advantages'","'RU'","('xpath', './/ul/li[3]/div')","'Преимущества'"]}