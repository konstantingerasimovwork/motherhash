{"uid":"5a2ddf1b9873f90c","name":"test_header_logo[language_locator1-logo1-https://motherhash-dev.nhco.tech/ru-RU]","fullName":"authorization.tests.test_header.TestHeader#test_header_logo","historyId":"67b244a2049988cb0d7275246dd2f625","time":{"start":1724590694135,"stop":1724590694135,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x560abc7e66ca <unknown>\n#1 0x560abc4b7600 <unknown>\n#2 0x560abc4ef485 <unknown>\n#3 0x560abc4eb2f8 <unknown>\n#4 0x560abc535ce8 <unknown>\n#5 0x560abc529643 <unknown>\n#6 0x560abc4f9d31 <unknown>\n#7 0x560abc4fa79e <unknown>\n#8 0x560abc7ae25b <unknown>\n#9 0x560abc7b21f2 <unknown>\n#10 0x560abc79b615 <unknown>\n#11 0x560abc7b2d82 <unknown>\n#12 0x560abc78025f <unknown>\n#13 0x560abc7d5e68 <unknown>\n#14 0x560abc7d6040 <unknown>\n#15 0x560abc7e549c <unknown>\n#16 0x7f30ee694ac3 <unknown>","statusTrace":"@pytest.fixture(scope=\"function\")\n    @allure.title('Инициализация драйвера Chrome')\n    def browser():\n        options = Options()\n        # options.add_argument(\"--headless\")\n        options.add_argument('--window-size=1920,1080')\n>       browser = webdriver.Chrome(options=options)\n\nconftest.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py:66: in __init__\n    super().__init__(command_executor=executor, options=options)\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:212: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:299: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f4300055250>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: Chrome failed to sta...\\\\n#14 0x560abc7d6040 \\\\u003Cunknown>\\\\n#15 0x560abc7e549c \\\\u003Cunknown>\\\\n#16 0x7f30ee694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\nE         (session not created: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nE       Stacktrace:\nE       #0 0x560abc7e66ca <unknown>\nE       #1 0x560abc4b7600 <unknown>\nE       #2 0x560abc4ef485 <unknown>\nE       #3 0x560abc4eb2f8 <unknown>\nE       #4 0x560abc535ce8 <unknown>\nE       #5 0x560abc529643 <unknown>\nE       #6 0x560abc4f9d31 <unknown>\nE       #7 0x560abc4fa79e <unknown>\nE       #8 0x560abc7ae25b <unknown>\nE       #9 0x560abc7b21f2 <unknown>\nE       #10 0x560abc79b615 <unknown>\nE       #11 0x560abc7b2d82 <unknown>\nE       #12 0x560abc78025f <unknown>\nE       #13 0x560abc7d5e68 <unknown>\nE       #14 0x560abc7d6040 <unknown>\nE       #15 0x560abc7e549c <unknown>\nE       #16 0x7f30ee694ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: SessionNotCreatedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1724590692067,"stop":1724590692130,"duration":63},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Инициализация драйвера Chrome","time":{"start":1724590694135,"stop":1724590694319,"duration":184},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x560abc7e66ca <unknown>\n#1 0x560abc4b7600 <unknown>\n#2 0x560abc4ef485 <unknown>\n#3 0x560abc4eb2f8 <unknown>\n#4 0x560abc535ce8 <unknown>\n#5 0x560abc529643 <unknown>\n#6 0x560abc4f9d31 <unknown>\n#7 0x560abc4fa79e <unknown>\n#8 0x560abc7ae25b <unknown>\n#9 0x560abc7b21f2 <unknown>\n#10 0x560abc79b615 <unknown>\n#11 0x560abc7b2d82 <unknown>\n#12 0x560abc78025f <unknown>\n#13 0x560abc7d5e68 <unknown>\n#14 0x560abc7d6040 <unknown>\n#15 0x560abc7e549c <unknown>\n#16 0x7f30ee694ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1123, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 895, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/motherhash/motherhash/conftest.py\", line 41, in browser\n    browser = webdriver.Chrome(options=options)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py\", line 45, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py\", line 66, in __init__\n    super().__init__(command_executor=executor, options=options)\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 212, in __init__\n    self.start_session(capabilities)\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 299, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"subSuite","value":"1. Проверка перехода по логотипу на главную страницу лендинга"},{"name":"suite","value":"Header"},{"name":"parentSuite","value":"authorization.tests"},{"name":"host","value":"fv-az1247-936"},{"name":"thread","value":"2099-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"authorization.tests.test_header"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"language","value":"'RU'"},{"name":"language_locator","value":"('xpath', './/ul/li[3]/div')"},{"name":"logo","value":"('xpath', './/a[@href=\"https://motherhash-dev.nhco.tech/ru/\"]')"},{"name":"main_url","value":"'https://motherhash-dev.nhco.tech/ru'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":8,"unknown":0,"total":10},"items":[{"uid":"88c5c5a3ca99304","reportUrl":"https://konstantingerasimovwork.github.io/motherhash/106//#testresult/88c5c5a3ca99304","status":"passed","time":{"start":1724504310513,"stop":1724504315405,"duration":4892}},{"uid":"e884c87698ae15c8","reportUrl":"https://konstantingerasimovwork.github.io/motherhash/105//#testresult/e884c87698ae15c8","status":"passed","time":{"start":1724486065815,"stop":1724486069570,"duration":3755}},{"uid":"6fd5a94fbf5abf10","reportUrl":"https://konstantingerasimovwork.github.io/motherhash/104//#testresult/6fd5a94fbf5abf10","status":"broken","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55e2e5fdd6ca <unknown>\n#1 0x55e2e5cae600 <unknown>\n#2 0x55e2e5ce6485 <unknown>\n#3 0x55e2e5ce22f8 <unknown>\n#4 0x55e2e5d2cce8 <unknown>\n#5 0x55e2e5d20643 <unknown>\n#6 0x55e2e5cf0d31 <unknown>\n#7 0x55e2e5cf179e <unknown>\n#8 0x55e2e5fa525b <unknown>\n#9 0x55e2e5fa91f2 <unknown>\n#10 0x55e2e5f92615 <unknown>\n#11 0x55e2e5fa9d82 <unknown>\n#12 0x55e2e5f7725f <unknown>\n#13 0x55e2e5fcce68 <unknown>\n#14 0x55e2e5fcd040 <unknown>\n#15 0x55e2e5fdc49c <unknown>\n#16 0x7f6774c94ac3 <unknown>","time":{"start":1724485908838,"stop":1724485908838,"duration":0}},{"uid":"8594e2b0f757cc40","reportUrl":"https://konstantingerasimovwork.github.io/motherhash/103//#testresult/8594e2b0f757cc40","status":"passed","time":{"start":1724425318969,"stop":1724425323154,"duration":4185}},{"uid":"4963df0c974c0c15","reportUrl":"https://konstantingerasimovwork.github.io/motherhash/102//#testresult/4963df0c974c0c15","status":"passed","time":{"start":1724423014434,"stop":1724423018503,"duration":4069}},{"uid":"49f760e740d0f434","reportUrl":"https://konstantingerasimovwork.github.io/motherhash/101//#testresult/49f760e740d0f434","status":"passed","time":{"start":1724417981356,"stop":1724417985734,"duration":4378}},{"uid":"11fe65072a2a2968","reportUrl":"https://konstantingerasimovwork.github.io/motherhash/100//#testresult/11fe65072a2a2968","status":"passed","time":{"start":1724406522114,"stop":1724406526518,"duration":4404}},{"uid":"89fe4806650c273f","reportUrl":"https://konstantingerasimovwork.github.io/motherhash/99//#testresult/89fe4806650c273f","status":"passed","time":{"start":1724404291700,"stop":1724404295715,"duration":4015}},{"uid":"37bb0dbaada39c86","reportUrl":"https://konstantingerasimovwork.github.io/motherhash/98//#testresult/37bb0dbaada39c86","status":"passed","time":{"start":1724402034911,"stop":1724402039414,"duration":4503}}]},"tags":[]},"source":"5a2ddf1b9873f90c.json","parameterValues":["'RU'","('xpath', './/ul/li[3]/div')","('xpath', './/a[@href=\"https://motherhash-dev.nhco.tech/ru/\"]')","'https://motherhash-dev.nhco.tech/ru'"]}