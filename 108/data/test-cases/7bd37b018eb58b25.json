{"uid":"7bd37b018eb58b25","name":"test_header_advantages[language_locator2-advantages_link2-https://motherhash-dev.nhco.tech/pt#advantages-Vantagens-PT]","fullName":"authorization.tests.test_header.TestHeader#test_header_advantages","historyId":"da77b3efff3c395a924e59d580efdd3d","time":{"start":1724590695641,"stop":1724590695641,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x5578f1eb06ca <unknown>\n#1 0x5578f1b81600 <unknown>\n#2 0x5578f1bb9485 <unknown>\n#3 0x5578f1bb52f8 <unknown>\n#4 0x5578f1bffce8 <unknown>\n#5 0x5578f1bf3643 <unknown>\n#6 0x5578f1bc3d31 <unknown>\n#7 0x5578f1bc479e <unknown>\n#8 0x5578f1e7825b <unknown>\n#9 0x5578f1e7c1f2 <unknown>\n#10 0x5578f1e65615 <unknown>\n#11 0x5578f1e7cd82 <unknown>\n#12 0x5578f1e4a25f <unknown>\n#13 0x5578f1e9fe68 <unknown>\n#14 0x5578f1ea0040 <unknown>\n#15 0x5578f1eaf49c <unknown>\n#16 0x7fd527c94ac3 <unknown>","statusTrace":"@pytest.fixture(scope=\"function\")\n    @allure.title('Инициализация драйвера Chrome')\n    def browser():\n        options = Options()\n        # options.add_argument(\"--headless\")\n        options.add_argument('--window-size=1920,1080')\n>       browser = webdriver.Chrome(options=options)\n\nconftest.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py:66: in __init__\n    super().__init__(command_executor=executor, options=options)\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:212: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:299: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f42ff80ce10>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: Chrome failed to sta...\\\\n#14 0x5578f1ea0040 \\\\u003Cunknown>\\\\n#15 0x5578f1eaf49c \\\\u003Cunknown>\\\\n#16 0x7fd527c94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\nE         (session not created: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nE       Stacktrace:\nE       #0 0x5578f1eb06ca <unknown>\nE       #1 0x5578f1b81600 <unknown>\nE       #2 0x5578f1bb9485 <unknown>\nE       #3 0x5578f1bb52f8 <unknown>\nE       #4 0x5578f1bffce8 <unknown>\nE       #5 0x5578f1bf3643 <unknown>\nE       #6 0x5578f1bc3d31 <unknown>\nE       #7 0x5578f1bc479e <unknown>\nE       #8 0x5578f1e7825b <unknown>\nE       #9 0x5578f1e7c1f2 <unknown>\nE       #10 0x5578f1e65615 <unknown>\nE       #11 0x5578f1e7cd82 <unknown>\nE       #12 0x5578f1e4a25f <unknown>\nE       #13 0x5578f1e9fe68 <unknown>\nE       #14 0x5578f1ea0040 <unknown>\nE       #15 0x5578f1eaf49c <unknown>\nE       #16 0x7fd527c94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: SessionNotCreatedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1724590692067,"stop":1724590692130,"duration":63},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Инициализация драйвера Chrome","time":{"start":1724590695642,"stop":1724590695826,"duration":184},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x5578f1eb06ca <unknown>\n#1 0x5578f1b81600 <unknown>\n#2 0x5578f1bb9485 <unknown>\n#3 0x5578f1bb52f8 <unknown>\n#4 0x5578f1bffce8 <unknown>\n#5 0x5578f1bf3643 <unknown>\n#6 0x5578f1bc3d31 <unknown>\n#7 0x5578f1bc479e <unknown>\n#8 0x5578f1e7825b <unknown>\n#9 0x5578f1e7c1f2 <unknown>\n#10 0x5578f1e65615 <unknown>\n#11 0x5578f1e7cd82 <unknown>\n#12 0x5578f1e4a25f <unknown>\n#13 0x5578f1e9fe68 <unknown>\n#14 0x5578f1ea0040 <unknown>\n#15 0x5578f1eaf49c <unknown>\n#16 0x7fd527c94ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1123, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 895, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/motherhash/motherhash/conftest.py\", line 41, in browser\n    browser = webdriver.Chrome(options=options)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py\", line 45, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py\", line 66, in __init__\n    super().__init__(command_executor=executor, options=options)\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 212, in __init__\n    self.start_session(capabilities)\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 299, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"subSuite","value":"3. Проверка перехода по пункту меню “Advantages/Преимущества/Vantagens“ на раздел Advantages/Преимущества/Vantagens на главной странице лендинга"},{"name":"suite","value":"Header"},{"name":"parentSuite","value":"authorization.tests"},{"name":"host","value":"fv-az1247-936"},{"name":"thread","value":"2099-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"authorization.tests.test_header"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"advantages_link","value":"('xpath', './/a[contains(text(), \"Vantagens\")]')"},{"name":"advantages_url","value":"'https://motherhash-dev.nhco.tech/pt#advantages'"},{"name":"language","value":"'PT'"},{"name":"language_locator","value":"('xpath', './/ul/li[2]/div')"},{"name":"text","value":"'Vantagens'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":8,"unknown":0,"total":10},"items":[{"uid":"4c42377f73e53969","reportUrl":"https://konstantingerasimovwork.github.io/motherhash/106//#testresult/4c42377f73e53969","status":"passed","time":{"start":1724504342602,"stop":1724504346782,"duration":4180}},{"uid":"94109d4b40f38176","reportUrl":"https://konstantingerasimovwork.github.io/motherhash/105//#testresult/94109d4b40f38176","status":"passed","time":{"start":1724486094769,"stop":1724486098780,"duration":4011}},{"uid":"f9333678e6e1b1d7","reportUrl":"https://konstantingerasimovwork.github.io/motherhash/104//#testresult/f9333678e6e1b1d7","status":"broken","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x555a9fb4a6ca <unknown>\n#1 0x555a9f81b600 <unknown>\n#2 0x555a9f853485 <unknown>\n#3 0x555a9f84f2f8 <unknown>\n#4 0x555a9f899ce8 <unknown>\n#5 0x555a9f88d643 <unknown>\n#6 0x555a9f85dd31 <unknown>\n#7 0x555a9f85e79e <unknown>\n#8 0x555a9fb1225b <unknown>\n#9 0x555a9fb161f2 <unknown>\n#10 0x555a9faff615 <unknown>\n#11 0x555a9fb16d82 <unknown>\n#12 0x555a9fae425f <unknown>\n#13 0x555a9fb39e68 <unknown>\n#14 0x555a9fb3a040 <unknown>\n#15 0x555a9fb4949c <unknown>\n#16 0x7f8d68e94ac3 <unknown>","time":{"start":1724485910335,"stop":1724485910335,"duration":0}},{"uid":"3d7e67a3f798a1cf","reportUrl":"https://konstantingerasimovwork.github.io/motherhash/103//#testresult/3d7e67a3f798a1cf","status":"passed","time":{"start":1724425356696,"stop":1724425361089,"duration":4393}},{"uid":"9a6f57393d730031","reportUrl":"https://konstantingerasimovwork.github.io/motherhash/102//#testresult/9a6f57393d730031","status":"passed","time":{"start":1724423046893,"stop":1724423052008,"duration":5115}},{"uid":"689ca98a43cf5953","reportUrl":"https://konstantingerasimovwork.github.io/motherhash/101//#testresult/689ca98a43cf5953","status":"passed","time":{"start":1724418014336,"stop":1724418018965,"duration":4629}},{"uid":"690143fc7e69b955","reportUrl":"https://konstantingerasimovwork.github.io/motherhash/100//#testresult/690143fc7e69b955","status":"passed","time":{"start":1724406554459,"stop":1724406558564,"duration":4105}},{"uid":"317e4c5c585944fc","reportUrl":"https://konstantingerasimovwork.github.io/motherhash/99//#testresult/317e4c5c585944fc","status":"passed","time":{"start":1724404320991,"stop":1724404324897,"duration":3906}},{"uid":"83fab6d6fcc60bf6","reportUrl":"https://konstantingerasimovwork.github.io/motherhash/98//#testresult/83fab6d6fcc60bf6","status":"passed","time":{"start":1724402064814,"stop":1724402069141,"duration":4327}}]},"tags":[]},"source":"7bd37b018eb58b25.json","parameterValues":["('xpath', './/a[contains(text(), \"Vantagens\")]')","'https://motherhash-dev.nhco.tech/pt#advantages'","'PT'","('xpath', './/ul/li[2]/div')","'Vantagens'"]}